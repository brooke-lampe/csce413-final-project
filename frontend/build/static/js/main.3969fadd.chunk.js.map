{"version":3,"sources":["redux/constants.js","redux/actionTypes.js","redux/reducers.js","redux/store.js","serviceWorker.js","redux/actions.js","components/SideBar.js","components/Filters/FilterItem.js","components/Filters/Filters.js","components/UI/Card.js","components/Dashboard/TypesCharts.js","components/Dashboard/QuickFacts.js","components/Trends/BarChart.js","components/Dashboard/Dashboard.js","components/Trends/TrendsList.js","components/Trends/Overview.js","components/Trends/Trends.js","components/Body.js","App.js","index.js"],"names":["NOW","Date","TWO_YEARS_AGO","getFullYear","getMonth","getDate","ALL","VIEWS","DASHBOARD","TRENDS","DATA","OVERVIEW","DAYS","MONTHS","YEARS","SET_FILTER","SET_ACTIVE_VIEW","SET_ACTIVE_TREND","SET_DATA","SET_LOADING","DEFAULT_FILTERS","cities","propertyTypes","startDate","endDate","filters","action","type","payload","key","value","Array","isArray","length","slice","activeView","activeTrend","data","loading","store","createStore","combineReducers","reducers","applyMiddleware","thunk","Boolean","window","location","hostname","match","setLoading","isLoading","applyFilters","dispatch","FormData","append","join","toISOString","replace","fetch","method","body","then","response","json","setData","SideBar","connect","state","setActiveView","view","className","onClick","Icon","name","ConnectedFilterItem","props","filterType","options","onChange","bind","renderLable","this","filterKey","label","url","setState","text","e","setFilter","item","short_text","placeholder","Dropdown","fluid","multiple","clearable","renderLabel","search","selection","selected","date","customInput","Input","Form","Field","width","getFilterInput","React","Component","FilterItem","ConnectedFilters","onApplyFilters","Group","Button","floated","size","style","clear","Filters","Card","title","icon","children","Content","Header","Dimmer","active","Loader","inverted","content","ReactFC","fcRoot","FusionCharts","Charts","PowerCharts","FusionTheme","getDataSource","total","prefix","chart","showBorder","showShadow","use3DLighting","showLabels","showValues","paletteColors","bgAlpha","canvasBgAlpha","doughnutRadius","pieRadius","plotBorderAlpha","toolTipBgcolor","toolTipColor","toolTipPadding","toolTipBorderRadius","toolTipBorderAlpha","tooltipBorderThickness","baseFontSize","baseFontColor","showLegend","legendNumColumns","legendShadow","legendBorderAlpha","drawCustomLegendIcon","legendBgAlpha","chartTopMargin","canvasTopMargin","chartBottomMargin","canvasBottomMargin","defaultCenterLabel","numberPrefix","centerLabel","centerLabelBold","centerLabelFontSize","enableRotation","transposeAnimation","TypesCharts","typesDistribution","chartConfig","dataFormat","height","salesChart","dataSource","sales","countChart","count","Grid","columns","relaxed","stackable","Column","verticalAlign","QuickFacts","dataKey","map","d","i","BarChart","categories","dataset","xAxisNameFontColor","xAxisValueFontColor","yAxisNameFontColor","yAxisValueFontColor","theme","yaxisname","numvisibleplot","labeldisplay","Dashboard","TrendsList","setActiveTrend","trend","List","horizontal","Item","TimeSeries","ConnectedOverview","getChart","renderAt","DataStore","createDataTable","format","extensions","customRangeSelector","enabled","canvas","fill","background","series","yAxis","plot","connectnulldata","min","Overview","Trends","Body","App","Container","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ieAAaA,EAAM,IAAIC,KACVC,EAAgB,IAAID,KAC/BD,EAAIG,cAAgB,EACpBH,EAAII,WACJJ,EAAIK,WAEOC,EAAM,EACNC,EAAQ,CACnBC,UAAW,YACXC,OAAQ,SACRC,KAAM,QAEKD,EAAS,CACpBE,SAAU,WACVC,KAAM,OACNC,OAAQ,SACRC,MAAO,SChBIC,EAAa,aACbC,EAAkB,kBAClBC,EAAmB,mBACnBC,EAAW,WACXC,EAAc,c,yjBCK3B,IAAMC,EAAkB,CACtBC,OAAQ,CAACf,GACTgB,cAAe,CAAChB,GAChBiB,UAAWrB,EACXsB,QAASxB,GAGJ,SAASyB,IAA4C,IAApCA,EAAmC,uDAAzBL,EAAiBM,EAAQ,uCACzD,GAAIA,EAAOC,OAASZ,EAClB,OAAOU,EAFgD,MAKlCC,EAAOE,QAAtBC,EALiD,EAKjDA,IAAKC,EAL4C,EAK5CA,MACb,GAAIC,MAAMC,QAAQF,IAAUA,EAAMG,OAAS,EAAG,CAE5C,GAAIH,EAAMA,EAAMG,OAAS,KAAO3B,EAC9B,OAAO,EAAP,GAAYmB,EAAZ,eAAsBI,EAAM,CAACvB,KAI/B,GAAIwB,EAAM,KAAOxB,EACf,OAAO,EAAP,GAAYmB,EAAZ,eAAsBI,EAAMC,EAAMI,MAAM,KAG5C,OAAO,EAAP,GAAYT,EAAZ,eAAsBI,EAAMC,IAGvB,SAASK,IAAkD,IAAvCA,EAAsC,uDAAzB5B,EAAMC,UAAWkB,EAAQ,uCAC/D,OAAIA,EAAOC,OAASX,EACXmB,EAEFT,EAAOE,QAGT,SAASQ,IAAoD,IAAxCA,EAAuC,uDAAzB3B,EAAOE,SAAUe,EAAQ,uCACjE,OAAIA,EAAOC,OAASV,EACXmB,EAEFV,EAAOE,QAGT,SAASS,IAAyB,IAApBA,EAAmB,uDAAZ,GAAIX,EAAQ,uCACtC,OAAIA,EAAOC,OAAST,EACXmB,EAEFX,EAAOE,QAGT,SAASU,IAAkC,IAA1BA,EAAyB,wDAARZ,EAAQ,uCAC/C,OAAIA,EAAOC,OAASR,EACXmB,EAEFZ,EAAOE,QCzDhB,IAEeW,EAFDC,YAAYC,YAAgBC,GAAWC,YAAgBC,MCQjDC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,8BCMC,SAASC,EAAWC,GACzB,MAAO,CAAExB,KAAMR,EAAaS,QAASuB,GAGhC,SAASC,EAAa3B,GAC3B,OAAO,SAAA4B,GACLA,EAASH,GAAW,IACpB,IAAMb,EAAO,IAAIiB,SAEjB,IAAK,IAAMzB,KAAOJ,EAAS,CACzB,IAAMK,EAAQL,EAAQI,GAClBC,aAAiBC,MACnBM,EAAKkB,OAAO1B,EAAKC,EAAM0B,KAAK,MACnB1B,aAAiB7B,KAC1BoC,EAAKkB,OACH1B,EACAC,EACG2B,cACAvB,MAAM,EAAG,IACTwB,QAAQ,IAAK,MAGlBrB,EAAKkB,OAAO1B,EAAKC,GAIrB6B,MADS,gCACE,CACTC,OAAQ,OACRC,KAAMxB,IAELyB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAzB,GACJgB,EApCD,SAAiBhB,GACtB,MAAO,CAAEV,KAAMT,EAAUU,QAASS,GAmCnB4B,CAAQ5B,IACjBgB,EAASH,GAAW,QCzC5B,IAyBegB,EAFCC,aAjCQ,SAAAC,GACtB,MAAO,CAAEjC,WAAYiC,EAAMjC,eAG7B,SAA4BkB,GAC1B,MAAO,CACLgB,cAAe,SAAAC,GAAI,OAAIjB,EDApB,SAAuBiB,GAC5B,MAAO,CAAE3C,KAAMX,EAAiBY,QAAS0C,GCDPD,CAAcC,QA2BlCH,EAvBS,SAAC,GAAD,IAAGhC,EAAH,EAAGA,WAAYkC,EAAf,EAAeA,cAAf,OACvB,yBAAKE,UAAU,YACb,yBAAKA,UAAU,SAAf,8BACA,yBAAKA,UAAU,iBACb,yBAAKA,UAAWpC,IAAe5B,EAAMC,UAAY,cAAgB,QAC/D,0BAAMgE,QAAS,kBAAMH,EAAc9D,EAAMC,aACvC,kBAACiE,EAAA,EAAD,CAAMC,KAAK,cADb,eAIF,yBAAKH,UAAWpC,IAAe5B,EAAME,OAAS,cAAgB,QAC5D,0BAAM+D,QAAS,kBAAMH,EAAc9D,EAAME,UACvC,kBAACgE,EAAA,EAAD,CAAMC,KAAK,eADb,iB,0HCTFC,E,YACJ,WAAYC,GAAQ,IAAD,6BACjB,4CAAMA,IACmB,aAArBA,EAAMC,aACR,EAAKT,MAAQ,CACXU,QAAS,GACTxC,SAAS,IAGb,EAAKyC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBATF,E,iFAYE,IAAD,SACuBE,KAAKN,MAAtCC,EADU,EACVA,WAAYM,EADF,EACEA,UAAWC,EADb,EACaA,MAC/B,GAAmB,aAAfP,EAA2B,CAC7B,IAAMQ,EAAG,iCAA6BF,EAA7B,KACTxB,MAAM0B,EAAK,CACTzB,OAAQ,SAEPE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAzB,GAAI,OACR,EAAKiD,SAAS,CACZR,QAAQ,CAAE,CAAEjD,IAAK,EAAGC,MAAO,EAAGyD,KAAK,OAAD,OAASH,KAApC,mBAAkD/C,IACzDC,SAAS,U,+BAMVkD,EAAGnD,GAAO,IAAD,EACiB6C,KAAKN,OACtCa,EAFgB,EACRA,WADQ,EACGN,UACE9C,EAAKP,S,kCAGhB4D,GACV,OAAOA,EAAKC,WAAaD,EAAKC,WAAaD,EAAKH,O,uCAGhC,IAAD,SAC4BL,KAAKN,MAAxC9C,EADO,EACPA,MAAO8D,EADA,EACAA,YACf,OAFe,EACaf,YAE1B,IAAK,WAAL,MAC+BK,KAAKd,MAA1B9B,EADV,EACUA,QAASwC,EADnB,EACmBA,QACjB,OACE,kBAACe,EAAA,EAAD,CACED,YAAaA,EACbE,OAAK,EACLC,UAAQ,EACRC,WAAS,EACTC,YAAaf,KAAKD,YAClBiB,QAAM,EACNC,WAAS,EACT7D,QAASA,EACTwC,QAASA,EACThD,MAAOA,EACPiD,SAAUG,KAAKH,WAIrB,IAAK,OACH,OACE,kBAAC,IAAD,CACEqB,SAAUtE,EACViD,SAAU,SAAAsB,GAAI,OAAI,EAAKtB,SAAS,GAAI,CAAEjD,MAAOuE,KAC7CC,YAAa,kBAACC,EAAA,EAAD,CAAOX,YAAaA,MAGvC,QACE,U,+BAGI,IAAD,EACuBV,KAAKN,MAA3BC,EADD,EACCA,WAAYO,EADb,EACaA,MACpB,OACE,kBAACoB,EAAA,EAAKC,MAAN,CAAYC,MAAsB,SAAf7B,EAAwB,EAAI,GAC7C,+BAAQO,GACPF,KAAKyB,sB,GA7EoBC,IAAMC,WAwFzBC,EALI3C,aA7FK,SAACC,EAAD,GAA2B,IAAjBe,EAAgB,EAAhBA,UAChC,MAAO,CAAErD,MAAOsC,EAAM3C,QAAQ0D,OAGhC,SAA4B9B,GAC1B,MAAO,CACLoC,UAAW,SAAC5D,EAAKC,GAAN,OAAgBuB,EFLxB,SAAmBxB,EAAKC,GAC7B,MAAO,CAAEH,KAAMZ,EAAYa,QAAS,CAAEC,MAAKC,UEIL2D,CAAU5D,EAAKC,QAuFpCqC,CAGjBQ,G,WCtFIoC,E,YACJ,WAAYnC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDoC,eAAiB,EAAKA,eAAehC,KAApB,gBAHL,E,iFAME,IAAD,EACgBE,KAAKN,OACvCxB,EAFkB,EACVA,cADU,EACI3B,W,uCAIN,IAAD,EACmByD,KAAKN,OACvCxB,EAFe,EACPA,cADO,EACO3B,W,+BAKtB,OACE,yBAAK8C,UAAU,mBACb,kBAACiC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKS,MAAN,KACE,kBAAC,EAAD,CACE9B,UAAW,SACXC,MAAO,SACPP,WAAY,WACZe,YAAa,kBAEf,kBAAC,EAAD,CACET,UAAW,gBACXC,MAAO,iBACPP,WAAY,WACZe,YAAa,0BAEf,kBAAC,EAAD,CACET,UAAW,YACXC,MAAO,aACPP,WAAY,OACZe,YAAa,eAEf,kBAAC,EAAD,CACET,UAAW,UACXC,MAAO,WACPP,WAAY,OACZe,YAAa,cAGjB,kBAACsB,EAAA,EAAD,CAAQC,QAAQ,QAAQC,KAAK,QAAQ5C,QAASU,KAAK8B,gBAAnD,iBAGA,yBAAKK,MAAO,CAAEC,MAAO,gB,GAlDAV,IAAMC,WA2DtBU,EAFCpD,aAnEQ,SAAAC,GACtB,MAAO,CAAE3C,QAAS2C,EAAM3C,YAG1B,SAA4B4B,GAC1B,MAAO,CACLD,aAAc,SAAA3B,GAAO,OAAI4B,EAASD,EAAa3B,QA6DnC0C,CAA6C4C,G,8BC7C9CS,GAFFrD,aAvBW,SAAAC,GACtB,MAAO,CAAEjB,UAAWiB,EAAM9B,WAsBf6B,EAnBS,SAAC,GAA0C,IAAxCsD,EAAuC,EAAvCA,MAAOtE,EAAgC,EAAhCA,UAAWuE,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC/C,OACE,kBAAC,KAAD,CAAc7B,OAAK,GACjB,kBAAC,KAAa8B,QAAd,KACE,kBAAC,KAAaC,OAAd,KACG,IACD,kBAACpD,EAAA,EAAD,CAAMC,KAAMgD,IAFd,IAEwBD,IAG1B,kBAAC,KAAaG,QAAd,CAAsBrD,UAAU,QAC9B,kBAACuD,GAAA,EAAD,CAAQC,OAAQ5E,GACd,kBAAC6E,GAAA,EAAD,CAAQD,OAAQ5E,EAAW8E,UAAQ,EAACC,QAAQ,aAE7CP,O,kqBCZTQ,KAAQC,OAAOC,KAAcC,KAAQC,KAAaC,MAElD,IAIMC,GAAgB,SAAChB,EAAOiB,EAAOC,GACnC,MAAO,CACLC,MAAO,CACLC,WAAY,IACZC,WAAY,IACZC,cAAe,IACfC,WAAY,IACZC,WAAY,IACZC,cAAe,uDACfC,QAAS,IACTC,cAAe,IACfC,eAAgB,KAChBC,UAAW,MACXC,gBAAiB,IACjBC,eAAgB,OAChBC,aAAc,UACdC,eAAgB,IAChBC,oBAAqB,IACrBC,mBAAoB,KACpBC,uBAAwB,MACxBC,aAAc,KACdC,cAAe,UACfC,WAAY,IACZC,iBAAkB,IAClBC,aAAc,IACdC,kBAAmB,IACnBC,qBAAsB,IACtBC,cAAe,IACfC,eAAgB,MAChBC,gBAAiB,MACjBC,kBAAmB,KACnBC,mBAAoB,KACpBC,mBAAmB,GAAD,OAAKjD,EAAL,iBAAmBiB,GACrCiC,aAAchC,EACdiC,YAAa,SACbC,gBAAiB,IACjBC,oBAAqB,KACrBC,eAAgB,IAChBC,mBAAoB,KAEtB3I,KAAM,KA2CK4I,GAFK9G,aArFI,SAAAC,GACtB,MAAO,CAAE/B,KAAM+B,EAAM/B,KAAK6I,qBAoFR/G,EArCS,SAAC,GAAc,IAAZ9B,EAAW,EAAXA,KACxB8I,EAAc,CAClBxJ,KAAM,aACN4C,UAAW,gBACX6G,WAAY,OACZ1E,MAAO,OACP2E,OAAQ,OAGJC,EAAU,MACXH,EADW,CAEdI,WAAW,MACN9C,GAAc,cAAepG,EAAOA,EAAKmJ,MAAM9C,MAAQ,EAAG,KADrD,CAERrG,KAAMA,EAAOA,EAAKmJ,MAAMnJ,KAAO,OAI7BoJ,EAAU,MACXN,EADW,CAEdI,WAAW,MACN9C,GAAc,aAAcpG,EAAOA,EAAKqJ,MAAMhD,MAAQ,EAAG,IADpD,CAERrG,KAAMA,EAAOA,EAAKqJ,MAAMrJ,KAAO,OAInC,OACE,kBAACsJ,EAAA,EAAD,CAAMpH,UAAU,YAAYqH,QAAS,EAAGC,QAAQ,OAAOC,WAAS,GAC9D,kBAACH,EAAA,EAAKI,OAAN,CAAaC,cAAc,UACzB,kBAAC,KAAYV,IAEf,kBAACK,EAAA,EAAKI,OAAN,CAAaC,cAAc,UACzB,kBAAC,KAAYP,QC7DNQ,GAFI9H,aAvBK,SAACC,EAAD,GAAyB,IAAf8H,EAAc,EAAdA,QAChC,MAAO,CAAE7J,KAAM+B,EAAM/B,KAAK6J,MAsBT/H,EAnBS,SAAC,GAAc,IAAZ9B,EAAW,EAAXA,KAC7B,OACE,kBAACsJ,EAAA,EAAD,CAAMpH,UAAU,YAAYqH,QAAS,EAAGC,QAAQ,OAAOC,WAAS,GAC7DzJ,EACGA,EAAK8J,KAAI,SAACC,EAAGC,GAAJ,OACP,kBAACV,EAAA,EAAKI,OAAN,CAAalK,IAAKwK,EAAGL,cAAc,UACjC,yBAAKzH,UAAU,cACb,yBAAKA,UAAU,QACb,kBAACE,EAAA,EAAD,CAAMC,KAAM0H,EAAE1E,OADhB,IAC0B0E,EAAE7G,MAE5B,yBAAKhB,UAAU,SAAS6H,EAAEtK,YAIhC,yBCbVqG,KAAQC,OAAOC,KAAcC,KAAQC,KAAaC,MAElD,IAiDe8D,GAFEnI,aA/CO,SAACC,EAAD,GAAyB,IAAf8H,EAAc,EAAdA,QAChC,MAAO,CAAE7J,KAAM+B,EAAM/B,KAAK6J,MA8CX/H,EAVS,SAAC,GAA2B,IAjCpCoI,EAAYC,EAiCD/E,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMrF,EAAW,EAAXA,KAClCuG,GAlCU2D,EAkCOlK,EAAOA,EAAKkK,WAAa,GAlCpBC,EAkCwBnK,EAAOA,EAAKmK,QAAU,GAjCnE,CACL7K,KAAM,iBACNyJ,WAAY,OACZ1E,MAAO,OACP2E,OAAQ,MACRE,WAAY,CACV3C,MAAO,CACLO,QAAS,IACTD,cAAe,uDACfM,eAAgB,OAChBC,aAAc,UACdC,eAAgB,IAChBC,oBAAqB,IACrBC,mBAAoB,KACpBC,uBAAwB,MACxBC,aAAc,KACdC,cAAe,UACf0C,mBAAoB,UACpBC,oBAAqB,UACrBC,mBAAoB,UACpBC,oBAAqB,UACrBC,MAAO,QACPC,UAAW,oBACXC,eAAgB,KAChBC,aAAc,QAEhBT,aACAC,aAQJ,OACE,kBAAC,GAAD,CAAM/E,MAAOA,EAAOC,KAAMA,GACxB,kBAAC,KAAYkB,OCvBJqE,GAxBG,WAChB,OACE,yBAAK1I,UAAU,aACb,kBAAC,GAAD,CAAMkD,MAAM,aAAaC,KAAK,aAC5B,kBAAC,GAAD,CAAYwE,QAAQ,cAGtB,kBAAC,GAAD,CAAMzE,MAAM,qBAAqBC,KAAK,aACpC,kBAAC,GAAD,OAGF,kBAAC,GAAD,CAAMD,MAAM,mBAAmBC,KAAK,cAClC,kBAAC,GAAD,CAAYwE,QAAQ,kBAGtB,kBAAC,GAAD,CACEzE,MAAM,sBACNC,KAAK,YACLwE,QAAQ,wB,UCRhB,IA4CegB,GALI/I,aAjDK,SAAAC,GACtB,MAAO,CAAEhC,YAAagC,EAAMhC,gBAG9B,SAA4BiB,GAC1B,MAAO,CACL8J,eAAgB,SAAAC,GAAK,OAAI/J,ETItB,SAAwB+J,GAC7B,MAAO,CAAEzL,KAAMV,EAAkBW,QAASwL,GSLND,CAAeC,QA2ClCjJ,EAvCS,SAAC,GAAD,IAAG/B,EAAH,EAAGA,YAAa+K,EAAhB,EAAgBA,eAAhB,OAC1B,yBAAK5I,UAAU,uBACb,kBAAC8I,GAAA,EAAD,CAAM9I,UAAU,cAAc+I,YAAU,EAACzB,SAAO,GAC9C,kBAACwB,GAAA,EAAKE,KAAN,CACEhJ,UACEnC,IAAgB3B,EAAOE,SAAW,mBAAqB,YAEzD6D,QAAS,kBAAM2I,EAAe1M,EAAOE,YAJvC,YAQA,kBAAC0M,GAAA,EAAKE,KAAN,CACEhJ,UACEnC,IAAgB3B,EAAOG,KAAO,mBAAqB,YAErD4D,QAAS,kBAAM2I,EAAe1M,EAAOG,QAJvC,aAQA,kBAACyM,GAAA,EAAKE,KAAN,CACEhJ,UACEnC,IAAgB3B,EAAOI,OAAS,mBAAqB,YAEvD2D,QAAS,kBAAM2I,EAAe1M,EAAOI,UAJvC,UAQA,kBAACwM,GAAA,EAAKE,KAAN,CACEhJ,UACEnC,IAAgB3B,EAAOK,MAAQ,mBAAqB,YAEtD0D,QAAS,kBAAM2I,EAAe1M,EAAOK,SAJvC,c,qBClCNqH,KAAQC,OAAOC,KAAcmF,KAAYjF,KAAaC,MAEtD,IAIMiF,G,YACJ,WAAY7I,GAAQ,IAAD,8BACjB,4CAAMA,KACD8I,SAAW,EAAKA,SAAS1I,KAAd,gBAFC,E,wEAKP,IACF3C,EAAS6C,KAAKN,MAAdvC,KAgDR,MAAO,CACLV,KAAM,aACNgM,SAAU,YACVjH,MAAO,OACP2E,OAAQ,MACRE,WAjCiB,CACjBlJ,MALkB,IAAIgG,KAAauF,WAAYC,gBAC/CxL,GAAc,GAhBD,CACb,CACEqC,KAAM,OACN/C,KAAM,OACNmM,OAAQ,YAEV,CACEpJ,KAAM,OACN/C,KAAM,UAER,CACE+C,KAAM,OACN/C,KAAM,YASRoM,WAAY,CACVC,oBAAqB,CACnBC,QAAS,MAGbrF,MAAO,CACLiE,MAAO,QACPxF,MAAO,CACL6G,OAAQ,CAAEC,KAAM,WAChBC,WAAY,CAAED,KAAM,YAEtBjF,cAAe,wDAEjBmF,OAAQ,OACRC,MAAO,CACL,CACEC,KAAM,CACJ,CACEzM,MAAO,OACP0M,iBAAiB,IAGrBC,IAAK,Y,+BAcX,IAAM7F,EAAQ1D,KAAKwI,WACnB,OACE,kBAAC,GAAD,CAAMjG,MAAM,kBAAkBC,KAAK,cACjC,yBAAKnD,UAAU,kBACb,kBAAC,KAAYqE,S,GArEShC,IAAMC,WA8EvB6H,GAFEvK,aAhFO,SAACC,EAAD,GAAyB,IAAf8H,EAAc,EAAdA,QAChC,MAAO,CAAE7J,KAAM+B,EAAM/B,KAAK6J,MA+EX/H,CAAyBsJ,IChD3BkB,GAFAxK,aAlCS,SAAAC,GACtB,MAAO,CAAEhC,YAAagC,EAAMhC,eAiCf+B,EA9BS,SAAC,GAAqB,IAAnB/B,EAAkB,EAAlBA,YACzB,OACE,yBAAKmC,UAAU,UACb,kBAAC,GAAD,MAEA,yBACEA,UAAWnC,IAAgB3B,EAAOE,SAAW,eAAiB,SAE9D,kBAAC,GAAD,CAAUuL,QAAQ,oBAGpB,yBAAK3H,UAAWnC,IAAgB3B,EAAOG,KAAO,eAAiB,SAC7D,kBAAC,GAAD,CAAU6G,MAAM,aAAaC,KAAK,YAAYwE,QAAQ,gBAGxD,yBAAK3H,UAAWnC,IAAgB3B,EAAOI,OAAS,eAAiB,SAC/D,kBAAC,GAAD,CACE4G,MAAM,gBACNC,KAAK,YACLwE,QAAQ,kBAIZ,yBAAK3H,UAAWnC,IAAgB3B,EAAOK,MAAQ,eAAiB,SAC9D,kBAAC,GAAD,CAAU2G,MAAM,eAAeC,KAAK,YAAYwE,QAAQ,qBCNjD0C,GAFFzK,aApBW,SAAAC,GACtB,MAAO,CAAEjC,WAAYiC,EAAMjC,cAmBhBgC,EAhBS,SAAC,GAAoB,IAAlBhC,EAAiB,EAAjBA,WACvB,OACE,yBAAKoC,UAAU,gBACb,kBAAC,EAAD,MAEA,yBAAKA,UAAWpC,IAAe5B,EAAMC,UAAY,cAAgB,QAC/D,kBAAC,GAAD,OAGF,yBAAK+D,UAAWpC,IAAe5B,EAAME,OAAS,cAAgB,QAC5D,kBAAC,GAAD,WCFOoO,I,OAbH,kBACV,kBAACC,EAAA,EAAD,CAAWhJ,OAAK,EAACvB,UAAU,iBACzB,kBAACoH,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,OAAN,CAAaxH,UAAU,kBAAkBmC,MAAO,GAC9C,kBAAC,EAAD,OAEF,kBAACiF,EAAA,EAAKI,OAAN,CAAarF,MAAO,IAClB,kBAAC,GAAD,W,OCJRqI,IAASC,OACP,kBAAC,IAAD,CAAUzM,MAAOA,GACf,kBAAC,GAAD,OAEF0M,SAASC,eAAe,SfoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvL,MAAK,SAAAwL,GACjCA,EAAaC,kB","file":"static/js/main.3969fadd.chunk.js","sourcesContent":["export const NOW = new Date();\r\nexport const TWO_YEARS_AGO = new Date(\r\n  NOW.getFullYear() - 2,\r\n  NOW.getMonth(),\r\n  NOW.getDate()\r\n);\r\nexport const ALL = 0;\r\nexport const VIEWS = {\r\n  DASHBOARD: \"DASHBOARD\",\r\n  TRENDS: \"TRENDS\",\r\n  DATA: \"DATA\"\r\n};\r\nexport const TRENDS = {\r\n  OVERVIEW: \"OVERVIEW\",\r\n  DAYS: \"DAYS\",\r\n  MONTHS: \"MONTHS\",\r\n  YEARS: \"YEARS\"\r\n};\r\n","export const SET_FILTER = \"SET_FILTER\";\r\nexport const SET_ACTIVE_VIEW = \"SET_ACTIVE_VIEW\";\r\nexport const SET_ACTIVE_TREND = \"SET_ACTIVE_TREND\";\r\nexport const SET_DATA = \"SET_DATA\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\n","import { NOW, TWO_YEARS_AGO, VIEWS, TRENDS, ALL } from \"./constants\";\r\nimport {\r\n  SET_FILTER,\r\n  SET_ACTIVE_VIEW,\r\n  SET_ACTIVE_TREND,\r\n  SET_DATA,\r\n  SET_LOADING\r\n} from \"./actionTypes\";\r\n\r\nconst DEFAULT_FILTERS = {\r\n  cities: [ALL],\r\n  propertyTypes: [ALL],\r\n  startDate: TWO_YEARS_AGO,\r\n  endDate: NOW\r\n};\r\n\r\nexport function filters(filters = DEFAULT_FILTERS, action) {\r\n  if (action.type !== SET_FILTER) {\r\n    return filters;\r\n  }\r\n\r\n  const { key, value } = action.payload;\r\n  if (Array.isArray(value) && value.length > 0) {\r\n    // Selecting ALL\r\n    if (value[value.length - 1] === ALL) {\r\n      return { ...filters, [key]: [ALL] };\r\n    }\r\n\r\n    // Selecting when ALL is selected\r\n    if (value[0] === ALL) {\r\n      return { ...filters, [key]: value.slice(1) };\r\n    }\r\n  }\r\n  return { ...filters, [key]: value };\r\n}\r\n\r\nexport function activeView(activeView = VIEWS.DASHBOARD, action) {\r\n  if (action.type !== SET_ACTIVE_VIEW) {\r\n    return activeView;\r\n  }\r\n  return action.payload;\r\n}\r\n\r\nexport function activeTrend(activeTrend = TRENDS.OVERVIEW, action) {\r\n  if (action.type !== SET_ACTIVE_TREND) {\r\n    return activeTrend;\r\n  }\r\n  return action.payload;\r\n}\r\n\r\nexport function data(data = {}, action) {\r\n  if (action.type !== SET_DATA) {\r\n    return data;\r\n  }\r\n  return action.payload;\r\n}\r\n\r\nexport function loading(loading = false, action) {\r\n  if (action.type !== SET_LOADING) {\r\n    return loading;\r\n  }\r\n  return action.payload;\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport * as reducers from \"./reducers\";\r\n\r\nconst store = createStore(combineReducers(reducers), applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  SET_FILTER,\r\n  SET_LOADING,\r\n  SET_DATA,\r\n  SET_ACTIVE_VIEW,\r\n  SET_ACTIVE_TREND\r\n} from \"./actionTypes\";\r\n\r\nexport function setFilter(key, value) {\r\n  return { type: SET_FILTER, payload: { key, value } };\r\n}\r\n\r\nexport function setActiveView(view) {\r\n  return { type: SET_ACTIVE_VIEW, payload: view };\r\n}\r\n\r\nexport function setActiveTrend(trend) {\r\n  return { type: SET_ACTIVE_TREND, payload: trend };\r\n}\r\n\r\nexport function setData(data) {\r\n  return { type: SET_DATA, payload: data };\r\n}\r\n\r\nexport function setLoading(isLoading) {\r\n  return { type: SET_LOADING, payload: isLoading };\r\n}\r\n\r\nexport function applyFilters(filters) {\r\n  return dispatch => {\r\n    dispatch(setLoading(true));\r\n    const data = new FormData();\r\n\r\n    for (const key in filters) {\r\n      const value = filters[key];\r\n      if (value instanceof Array) {\r\n        data.append(key, value.join(\",\"));\r\n      } else if (value instanceof Date) {\r\n        data.append(\r\n          key,\r\n          value\r\n            .toISOString()\r\n            .slice(0, 19)\r\n            .replace(\"T\", \" \")\r\n        );\r\n      } else {\r\n        data.append(key, value);\r\n      }\r\n    }\r\n    const url = `http://csce413.loc/api/sales/`;\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: data\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        dispatch(setData(data));\r\n        dispatch(setLoading(false));\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { setActiveView } from \"../redux/actions\";\r\nimport { VIEWS } from \"../redux/constants\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { activeView: state.activeView };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setActiveView: view => dispatch(setActiveView(view))\r\n  };\r\n}\r\n\r\nconst ConnectedSideBar = ({ activeView, setActiveView }) => (\r\n  <div className=\"side-bar\">\r\n    <div className=\"title\">Lancaster Realty Analytics</div>\r\n    <div className=\"items-wrapper\">\r\n      <div className={activeView === VIEWS.DASHBOARD ? \"item active\" : \"item\"}>\r\n        <span onClick={() => setActiveView(VIEWS.DASHBOARD)}>\r\n          <Icon name=\"dashboard\" /> Dashboard\r\n        </span>\r\n      </div>\r\n      <div className={activeView === VIEWS.TRENDS ? \"item active\" : \"item\"}>\r\n        <span onClick={() => setActiveView(VIEWS.TRENDS)}>\r\n          <Icon name=\"chart line\" /> Trends\r\n        </span>\r\n      </div>\r\n      {/* <div className={activeView === VIEWS.DATA ? \"item active\" : \"item\"}>\r\n        <span onClick={() => setActiveView(VIEWS.DATA)}>\r\n          <Icon name=\"table\" /> Data\r\n        </span>\r\n      </div> */}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst SideBar = connect(mapStateToProps, mapDispatchToProps)(ConnectedSideBar);\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Dropdown, Input } from \"semantic-ui-react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { setFilter } from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state, { filterKey }) => {\r\n  return { value: state.filters[filterKey] };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setFilter: (key, value) => dispatch(setFilter(key, value))\r\n  };\r\n}\r\n\r\nclass ConnectedFilterItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (props.filterType === \"dropdown\") {\r\n      this.state = {\r\n        options: [],\r\n        loading: true\r\n      };\r\n    }\r\n    this.onChange = this.onChange.bind(this);\r\n    this.renderLable = this.renderLable.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { filterType, filterKey, label } = this.props;\r\n    if (filterType === \"dropdown\") {\r\n      const url = `http://csce413.loc/api/${filterKey}/`;\r\n      fetch(url, {\r\n        method: \"POST\"\r\n      })\r\n        .then(response => response.json())\r\n        .then(data =>\r\n          this.setState({\r\n            options: [{ key: 0, value: 0, text: `All ${label}` }, ...data],\r\n            loading: false\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  onChange(e, data) {\r\n    const { setFilter, filterKey } = this.props;\r\n    setFilter(filterKey, data.value);\r\n  }\r\n\r\n  renderLable(item) {\r\n    return item.short_text ? item.short_text : item.text;\r\n  }\r\n\r\n  getFilterInput() {\r\n    const { value, placeholder, filterType } = this.props;\r\n    switch (filterType) {\r\n      case \"dropdown\":\r\n        const { loading, options } = this.state;\r\n        return (\r\n          <Dropdown\r\n            placeholder={placeholder}\r\n            fluid\r\n            multiple\r\n            clearable\r\n            renderLabel={this.renderLable}\r\n            search\r\n            selection\r\n            loading={loading}\r\n            options={options}\r\n            value={value}\r\n            onChange={this.onChange}\r\n          />\r\n        );\r\n\r\n      case \"date\":\r\n        return (\r\n          <DatePicker\r\n            selected={value}\r\n            onChange={date => this.onChange({}, { value: date })}\r\n            customInput={<Input placeholder={placeholder} />}\r\n          />\r\n        );\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n  render() {\r\n    const { filterType, label } = this.props;\r\n    return (\r\n      <Form.Field width={filterType === \"date\" ? 3 : 5}>\r\n        <label>{label}</label>\r\n        {this.getFilterInput()}\r\n      </Form.Field>\r\n    );\r\n  }\r\n}\r\n\r\nconst FilterItem = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ConnectedFilterItem);\r\n\r\nexport default FilterItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Button } from \"semantic-ui-react\";\r\nimport FilterItem from \"./FilterItem\";\r\nimport \"../../styles/Filters.scss\";\r\nimport { applyFilters } from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { filters: state.filters };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    applyFilters: filters => dispatch(applyFilters(filters))\r\n  };\r\n}\r\n\r\nclass ConnectedFilters extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onApplyFilters = this.onApplyFilters.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { applyFilters, filters } = this.props;\r\n    applyFilters(filters);\r\n  }\r\n\r\n  onApplyFilters() {\r\n    const { applyFilters, filters } = this.props;\r\n    applyFilters(filters);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"filters-wrapper\">\r\n        <Form>\r\n          <Form.Group>\r\n            <FilterItem\r\n              filterKey={\"cities\"}\r\n              label={\"Cities\"}\r\n              filterType={\"dropdown\"}\r\n              placeholder={\"Select Cities\"}\r\n            />\r\n            <FilterItem\r\n              filterKey={\"propertyTypes\"}\r\n              label={\"Property Types\"}\r\n              filterType={\"dropdown\"}\r\n              placeholder={\"Select Property types\"}\r\n            />\r\n            <FilterItem\r\n              filterKey={\"startDate\"}\r\n              label={\"Start Date\"}\r\n              filterType={\"date\"}\r\n              placeholder={\"Start Date\"}\r\n            />\r\n            <FilterItem\r\n              filterKey={\"endDate\"}\r\n              label={\"End Date\"}\r\n              filterType={\"date\"}\r\n              placeholder={\"End Date\"}\r\n            />\r\n          </Form.Group>\r\n          <Button floated=\"right\" size=\"large\" onClick={this.onApplyFilters}>\r\n            Apply Filters\r\n          </Button>\r\n          <div style={{ clear: \"both\" }}></div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Filters = connect(mapStateToProps, mapDispatchToProps)(ConnectedFilters);\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card as SemanticCard, Loader, Dimmer, Icon } from \"semantic-ui-react\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { isLoading: state.loading };\r\n};\r\n\r\nconst ConnectedCard = ({ title, isLoading, icon, children }) => {\r\n  return (\r\n    <SemanticCard fluid>\r\n      <SemanticCard.Content>\r\n        <SemanticCard.Header>\r\n          {\" \"}\r\n          <Icon name={icon} /> {title}\r\n        </SemanticCard.Header>\r\n      </SemanticCard.Content>\r\n      <SemanticCard.Content className=\"body\">\r\n        <Dimmer active={isLoading}>\r\n          <Loader active={isLoading} inverted content=\"Loading\" />\r\n        </Dimmer>\r\n        {children}\r\n      </SemanticCard.Content>\r\n    </SemanticCard>\r\n  );\r\n};\r\n\r\nconst Card = connect(mapStateToProps)(ConnectedCard);\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Charts from \"fusioncharts/fusioncharts.charts\";\r\nimport PowerCharts from \"fusioncharts/fusioncharts.powercharts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.candy\";\r\n\r\nReactFC.fcRoot(FusionCharts, Charts, PowerCharts, FusionTheme);\r\n\r\nconst mapStateToProps = state => {\r\n  return { data: state.data.typesDistribution };\r\n};\r\n\r\nconst getDataSource = (title, total, prefix) => {\r\n  return {\r\n    chart: {\r\n      showBorder: \"0\",\r\n      showShadow: \"0\",\r\n      use3DLighting: \"0\",\r\n      showLabels: \"0\",\r\n      showValues: \"0\",\r\n      paletteColors: \"#0B5345, #2980b9, #641E16, #f39c12, #939393, #8e44ad\",\r\n      bgAlpha: \"0\",\r\n      canvasBgAlpha: \"0\",\r\n      doughnutRadius: \"60\",\r\n      pieRadius: \"110\",\r\n      plotBorderAlpha: \"0\",\r\n      toolTipBgcolor: \"#000\",\r\n      toolTipColor: \"#FDFDFD\",\r\n      toolTipPadding: \"7\",\r\n      toolTipBorderRadius: \"3\",\r\n      toolTipBorderAlpha: \"30\",\r\n      tooltipBorderThickness: \"0.7\",\r\n      baseFontSize: \"12\",\r\n      baseFontColor: \"#e3e3e3\",\r\n      showLegend: \"1\",\r\n      legendNumColumns: \"2\",\r\n      legendShadow: \"0\",\r\n      legendBorderAlpha: \"0\",\r\n      drawCustomLegendIcon: \"1\",\r\n      legendBgAlpha: \"0\",\r\n      chartTopMargin: \"-10\",\r\n      canvasTopMargin: \"-10\",\r\n      chartBottomMargin: \"20\",\r\n      canvasBottomMargin: \"20\",\r\n      defaultCenterLabel: `${title} <br> ${total}`,\r\n      numberPrefix: prefix,\r\n      centerLabel: \"$value\",\r\n      centerLabelBold: \"1\",\r\n      centerLabelFontSize: \"16\",\r\n      enableRotation: \"0\",\r\n      transposeAnimation: \"1\"\r\n    },\r\n    data: []\r\n  };\r\n};\r\n\r\nconst ConnectedTypesCharts = ({ data }) => {\r\n  const chartConfig = {\r\n    type: \"doughnut2d\",\r\n    className: \"fc-doughnut2d\",\r\n    dataFormat: \"JSON\",\r\n    width: \"100%\",\r\n    height: \"350\"\r\n  };\r\n\r\n  const salesChart = {\r\n    ...chartConfig,\r\n    dataSource: {\r\n      ...getDataSource(\"Total Sales\", data ? data.sales.total : 0, \"$\"),\r\n      data: data ? data.sales.data : []\r\n    }\r\n  };\r\n\r\n  const countChart = {\r\n    ...chartConfig,\r\n    dataSource: {\r\n      ...getDataSource(\"Total Sold\", data ? data.count.total : 0, \"\"),\r\n      data: data ? data.count.data : []\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid className=\"card-grid\" columns={2} relaxed=\"very\" stackable>\r\n      <Grid.Column verticalAlign=\"middle\">\r\n        <ReactFC {...salesChart} />\r\n      </Grid.Column>\r\n      <Grid.Column verticalAlign=\"middle\">\r\n        <ReactFC {...countChart} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst TypesCharts = connect(mapStateToProps)(ConnectedTypesCharts);\r\n\r\nexport default TypesCharts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid, Icon } from \"semantic-ui-react\";\r\n\r\nconst mapStateToProps = (state, { dataKey }) => {\r\n  return { data: state.data[dataKey] };\r\n};\r\n\r\nconst ConnectedQuickFacts = ({ data }) => {\r\n  return (\r\n    <Grid className=\"card-grid\" columns={4} relaxed=\"very\" stackable>\r\n      {data\r\n        ? data.map((d, i) => (\r\n            <Grid.Column key={i} verticalAlign=\"middle\">\r\n              <div className=\"quick-fact\">\r\n                <div className=\"text\">\r\n                  <Icon name={d.icon} /> {d.text}\r\n                </div>\r\n                <div className=\"value\">{d.value}</div>\r\n              </div>\r\n            </Grid.Column>\r\n          ))\r\n        : \"No data to display\"}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst QuickFacts = connect(mapStateToProps)(ConnectedQuickFacts);\r\n\r\nexport default QuickFacts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Charts from \"fusioncharts/fusioncharts.charts\";\r\nimport PowerCharts from \"fusioncharts/fusioncharts.powercharts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.candy\";\r\nimport Card from \"../UI/Card\";\r\n\r\nReactFC.fcRoot(FusionCharts, Charts, PowerCharts, FusionTheme);\r\n\r\nconst mapStateToProps = (state, { dataKey }) => {\r\n  return { data: state.data[dataKey] };\r\n};\r\n\r\nconst getChart = (categories, dataset) => {\r\n  return {\r\n    type: \"scrollcolumn2d\",\r\n    dataFormat: \"JSON\",\r\n    width: \"100%\",\r\n    height: \"400\",\r\n    dataSource: {\r\n      chart: {\r\n        bgAlpha: \"0\",\r\n        paletteColors: \"#0B5345, #2980b9, #641E16, #2c3e50, #8e44ad, #f39c12\",\r\n        toolTipBgcolor: \"#000\",\r\n        toolTipColor: \"#FDFDFD\",\r\n        toolTipPadding: \"7\",\r\n        toolTipBorderRadius: \"3\",\r\n        toolTipBorderAlpha: \"30\",\r\n        tooltipBorderThickness: \"0.7\",\r\n        baseFontSize: \"12\",\r\n        baseFontColor: \"#e3e3e3\",\r\n        xAxisNameFontColor: \"#e3e3e3\",\r\n        xAxisValueFontColor: \"#e3e3e3\",\r\n        yAxisNameFontColor: \"#e3e3e3\",\r\n        yAxisValueFontColor: \"#e3e3e3\",\r\n        theme: \"candy\",\r\n        yaxisname: \"Median Sale Price\",\r\n        numvisibleplot: \"35\",\r\n        labeldisplay: \"auto\"\r\n      },\r\n      categories,\r\n      dataset\r\n    }\r\n  };\r\n};\r\n\r\nconst ConnectedBarChart = ({ title, icon, data }) => {\r\n  const chart = getChart(data ? data.categories : [], data ? data.dataset : []);\r\n\r\n  return (\r\n    <Card title={title} icon={icon}>\r\n      <ReactFC {...chart} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst BarChart = connect(mapStateToProps)(ConnectedBarChart);\r\n\r\nexport default BarChart;\r\n","import React from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport TypesCharts from \"./TypesCharts\";\r\nimport QuickFacts from \"./QuickFacts\";\r\nimport BarChart from \"../Trends/BarChart\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Card title=\"Statistics\" icon=\"dashboard\">\r\n        <QuickFacts dataKey=\"overview\" />\r\n      </Card>\r\n\r\n      <Card title=\"Types Distribution\" icon=\"chart pie\">\r\n        <TypesCharts />\r\n      </Card>\r\n\r\n      <Card title=\"Trends At Glance\" icon=\"chart line\">\r\n        <QuickFacts dataKey=\"trendsGlance\" />\r\n      </Card>\r\n\r\n      <BarChart\r\n        title=\"Cities Distribution\"\r\n        icon=\"chart bar\"\r\n        dataKey=\"citesDistribution\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { List } from \"semantic-ui-react\";\r\nimport { setActiveTrend } from \"../../redux/actions\";\r\nimport { TRENDS } from \"../../redux/constants\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { activeTrend: state.activeTrend };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setActiveTrend: trend => dispatch(setActiveTrend(trend))\r\n  };\r\n}\r\n\r\nconst ConnectedTrendsList = ({ activeTrend, setActiveTrend }) => (\r\n  <div className=\"trends-list-wrapper\">\r\n    <List className=\"trends-list\" horizontal relaxed>\r\n      <List.Item\r\n        className={\r\n          activeTrend === TRENDS.OVERVIEW ? \"list-item active\" : \"list-item\"\r\n        }\r\n        onClick={() => setActiveTrend(TRENDS.OVERVIEW)}\r\n      >\r\n        Overview\r\n      </List.Item>\r\n      <List.Item\r\n        className={\r\n          activeTrend === TRENDS.DAYS ? \"list-item active\" : \"list-item\"\r\n        }\r\n        onClick={() => setActiveTrend(TRENDS.DAYS)}\r\n      >\r\n        Week Days\r\n      </List.Item>\r\n      <List.Item\r\n        className={\r\n          activeTrend === TRENDS.MONTHS ? \"list-item active\" : \"list-item\"\r\n        }\r\n        onClick={() => setActiveTrend(TRENDS.MONTHS)}\r\n      >\r\n        Months\r\n      </List.Item>\r\n      <List.Item\r\n        className={\r\n          activeTrend === TRENDS.YEARS ? \"list-item active\" : \"list-item\"\r\n        }\r\n        onClick={() => setActiveTrend(TRENDS.YEARS)}\r\n      >\r\n        Years\r\n      </List.Item>\r\n    </List>\r\n  </div>\r\n);\r\n\r\nconst TrendsList = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ConnectedTrendsList);\r\n\r\nexport default TrendsList;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport TimeSeries from \"fusioncharts/fusioncharts.timeseries\";\r\nimport PowerCharts from \"fusioncharts/fusioncharts.powercharts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.candy\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport Card from \"../UI/Card\";\r\n\r\nReactFC.fcRoot(FusionCharts, TimeSeries, PowerCharts, FusionTheme);\r\n\r\nconst mapStateToProps = (state, { dataKey }) => {\r\n  return { data: state.data[dataKey] };\r\n};\r\n\r\nclass ConnectedOverview extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getChart = this.getChart.bind(this);\r\n  }\r\n\r\n  getChart() {\r\n    const { data } = this.props;\r\n    const schema = [\r\n      {\r\n        name: \"Time\",\r\n        type: \"date\",\r\n        format: \"%d-%b-%y\"\r\n      },\r\n      {\r\n        name: \"Type\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"sale\",\r\n        type: \"number\"\r\n      }\r\n    ];\r\n    const fusionTable = new FusionCharts.DataStore().createDataTable(\r\n      data ? data : [],\r\n      schema\r\n    );\r\n    const dataSource = {\r\n      data: fusionTable,\r\n      extensions: {\r\n        customRangeSelector: {\r\n          enabled: \"0\"\r\n        }\r\n      },\r\n      chart: {\r\n        theme: \"candy\",\r\n        style: {\r\n          canvas: { fill: \"#1e1e1e\" },\r\n          background: { fill: \"#1e1e1e\" }\r\n        },\r\n        paletteColors: \"#0B5345, #2980b9, #641E16, #2c3e50, #8e44ad, #f39c12\"\r\n      },\r\n      series: \"Type\",\r\n      yAxis: [\r\n        {\r\n          plot: [\r\n            {\r\n              value: \"sale\",\r\n              connectnulldata: true\r\n            }\r\n          ],\r\n          min: \"130\"\r\n        }\r\n      ]\r\n    };\r\n    return {\r\n      type: \"timeseries\",\r\n      renderAt: \"container\",\r\n      width: \"100%\",\r\n      height: \"400\",\r\n      dataSource\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const chart = this.getChart();\r\n    return (\r\n      <Card title=\"Trends Overview\" icon=\"chart line\">\r\n        <div className=\"overview-chart\">\r\n          <ReactFC {...chart} />\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst Overview = connect(mapStateToProps)(ConnectedOverview);\r\n\r\nexport default Overview;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TrendsList from \"./TrendsList\";\r\nimport Overview from \"./Overview\";\r\nimport BarChart from \"./BarChart\";\r\nimport { TRENDS } from \"../../redux/constants\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { activeTrend: state.activeTrend };\r\n};\r\n\r\nconst ConnectedTrends = ({ activeTrend }) => {\r\n  return (\r\n    <div className=\"trends\">\r\n      <TrendsList />\r\n\r\n      <div\r\n        className={activeTrend === TRENDS.OVERVIEW ? \"trend active\" : \"trend\"}\r\n      >\r\n        <Overview dataKey=\"overviewTrends\" />\r\n      </div>\r\n\r\n      <div className={activeTrend === TRENDS.DAYS ? \"trend active\" : \"trend\"}>\r\n        <BarChart title=\"Day Trends\" icon=\"chart bar\" dataKey=\"daysTrends\" />\r\n      </div>\r\n\r\n      <div className={activeTrend === TRENDS.MONTHS ? \"trend active\" : \"trend\"}>\r\n        <BarChart\r\n          title=\"Months Trends\"\r\n          icon=\"chart bar\"\r\n          dataKey=\"monthsTrends\"\r\n        />\r\n      </div>\r\n\r\n      <div className={activeTrend === TRENDS.YEARS ? \"trend active\" : \"trend\"}>\r\n        <BarChart title=\"Years Trends\" icon=\"chart bar\" dataKey=\"yearsTrends\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Trends = connect(mapStateToProps)(ConnectedTrends);\r\n\r\nexport default Trends;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Filters from \"./Filters/Filters\";\r\nimport Dashboard from \"./Dashboard/Dashboard\";\r\nimport Trends from \"./Trends/Trends\";\r\nimport { VIEWS } from \"../redux/constants\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { activeView: state.activeView };\r\n};\r\n\r\nconst ConnectedBody = ({ activeView }) => {\r\n  return (\r\n    <div className=\"body-wrapper\">\r\n      <Filters />\r\n\r\n      <div className={activeView === VIEWS.DASHBOARD ? \"view active\" : \"view\"}>\r\n        <Dashboard />\r\n      </div>\r\n\r\n      <div className={activeView === VIEWS.TRENDS ? \"view active\" : \"view\"}>\r\n        <Trends />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Body = connect(mapStateToProps)(ConnectedBody);\r\n\r\nexport default Body;\r\n","import React from \"react\";\nimport { Grid, Container } from \"semantic-ui-react\";\nimport SideBar from \"./components/SideBar.js\";\nimport Body from \"./components/Body.js\";\nimport \"./styles/App.scss\";\n\nconst App = () => (\n  <Container fluid className=\"app-container\">\n    <Grid>\n      <Grid.Column className=\"side-bar-column\" width={3}>\n        <SideBar />\n      </Grid.Column>\n      <Grid.Column width={13}>\n        <Body />\n      </Grid.Column>\n    </Grid>\n  </Container>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}